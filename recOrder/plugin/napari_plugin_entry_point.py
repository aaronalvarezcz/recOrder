from napari_plugin_engine import napari_hook_implementation
from qtpy.QtWidgets import QWidget

"""
each of these GUI files is generated by qtdesigner.
To generate a new .py file from the designer's .ui file, type this in terminal

pyuic5 -x <.ui input file> -o <.py output file>

"""
from recOrder.plugin.qtdesigner import recOrder_calibration_v3
from recOrder.plugin.plguin_manager import SignalManager

class RecOrderCalibration(QWidget):
    def __init__(self, napari_viewer):
        super().__init__()
        self.viewer = napari_viewer

        # morphed_tab_widget is the .py file generated by pyuic5
        # ui = recOrder_calibration_06232021.Ui_Form()
        # ui.setupUi(self)

        # ui = recOrder_calibration_scroll.Ui_ScrollArea()
        ui = recOrder_calibration_v3.Ui_Form()
        ui.setupUi(self)

        # we need to add all our signal connections
        # SignalManager("calbiration", self, self)

@napari_hook_implementation
def napari_experimental_provide_dock_widget():
    # you can return either a single widget, or a sequence of widgets
    # each widget is accessible as a new plugin that stacks in the side panel
    return [RecOrderCalibration]
